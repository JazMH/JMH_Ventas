

@using Sales.Shared.Entities;

@inject SweetAlertService sweetAlertService

<NavigationLock OnBeforeInternalNavigation="onBeforeInternalNavigation"></NavigationLock>


<EditForm EditContxt="editContextx" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>País:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Country.Name" />
            <ValidationMessage For="@(() => Country.Name)" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
</EditForm>



@code {

    private EditContext editContext = null!;

    [EditorRequired]
    [Parameter]
    public Country Country { get; set; } = null!;


    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    protected override void OnInitialized()
    {
        editContext = new((Country));
    }


    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task onBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasMofied = editContext.IsModified();
        if (!formWasMofied || FormPostedSuccessfully)
        {
            return;
        }
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "conirmación",
                Text = "¿Deseas abandonar la página?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si",
            });
        var confirm = !String.IsNullOrEmpty(result.Value);
        if (confirm)
        {
            return;
        }
        context.PreventNavigation();
    }
}
